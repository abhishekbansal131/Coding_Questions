/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int count(ListNode head){
        int c = 0;
        if(head == null) return 0;
        ListNode temp = head;
        while(temp != null){
            c++;
            temp = temp.next;
        }
        return c;
    }
    public ListNode swapPairs(ListNode head) {
        ListNode temp = head;
        if(count(head) <= 1) return head;
        int n = count(head);
        if(count(head) % 2 !=0) n--; 
        for(int i=0; i<n; i+=2){
            int t = temp.val;
            temp.val = temp.next.val;
            temp.next.val = t;
            temp = temp.next.next;
        }
        return head;
    }
}
