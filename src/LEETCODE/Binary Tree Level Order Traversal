/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<Integer> c = new LinkedList<>();
        List<List<Integer>> b = new LinkedList<>();
        if(root == null) return b;
        Queue<TreeNode> a = new LinkedList<>();
        a.add(root);
        a.add(null);
        while(!a.isEmpty()){
            TreeNode currNode = a.remove();
            if(currNode == null){
                b.add(c);
                c = new LinkedList<>();
                if(a.isEmpty()){
                   break;
                }
                else {
                    a.add(null);
                }
            }
            else {
                c.add(currNode.val);
                if(currNode.left != null) a.add(currNode.left);
                if(currNode.right != null) a.add(currNode.right);
            }
        }
        return b;
    }
}
