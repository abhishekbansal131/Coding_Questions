class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> res = new ArrayList<>();
        
        Arrays.sort(nums);
        if(nums == null || nums.length == 0) return res;
        int n = nums.length;
        
        for(int i=0; i<n; i++){
            for(int j=i+1; j<n; j++){
                long target_2 = (long)target - nums[i]- nums[j];
                int front = j+1;
                int back = n-1;
                
                while(front < back){
                    if(nums[front] + nums[back] < target_2) front++;
                    else if(nums[front] + nums[back] > target_2) back--;
                    else{
                        List<Integer> q = new ArrayList<>();
                        q.add(nums[i]);
                        q.add(nums[j]);
                        q.add(nums[front]);
                        q.add(nums[back]);
                        res.add(q);
                        
                        while(front < back && nums[front] == q.get(2)) ++front;
                        while(front < back && nums[back] == q.get(3)) --back;
                    }
                }
                while(j+1 < n && nums[j+1] == nums[j]) ++j;
            }
            while(i+1 < n && nums[i+1] == nums[i]) ++i;
        }
        return res;
    }
}
