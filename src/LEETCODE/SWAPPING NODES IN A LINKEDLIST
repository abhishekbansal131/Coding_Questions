/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int count(ListNode head){
        int c = 0;
        if(head == null) return 0;
        ListNode temp = head;
        while(temp != null){
            c++;
            temp = temp.next;
        }
        return c;
    }
    public ListNode swapNodes(ListNode head, int k) {
        ListNode temp = head;
        int a = 0;
        int p = 0;
        int n = count(head);
        for(int i=0; i<n; i++){
            if(i == k-1)
                a = temp.val;
            if(i == n-k){
                p = temp.val;
            }
            temp = temp.next;
        }
        
        temp = head;
        for(int i=0; i<n; i++){
            if(i == k-1)
                temp.val = p;
            if(i == n-k){
                temp.val = a;
            }
            temp = temp.next;
        }
        return head;
    }
}
