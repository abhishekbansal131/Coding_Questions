/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        Stack<Integer> s = new Stack<>();
        ListNode temp = head;
        int c = 0;
        while(temp != null){
            c++;
            if(c>=left && c<=right)
                s.push(temp.val);
            temp = temp.next;
        }
        temp = head;
        c = 0;
        while(temp != null){
            c++;
            if(c>=left && c<=right) temp.val = s.pop();
            temp = temp.next;
        }
        return head;
    }
}
